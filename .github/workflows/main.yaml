name: Build and Push Docker Image

on:
  push:
    branches:
      - 'main'
      - 'master'
    tags:
      - '**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Get the latest tag
        id: latest_tag
        run: echo "tag=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV

      - name: Calculate new tag
        id: new_tag
        run: |
          LATEST_TAG=${{ env.tag }}
          VERSION_NUMBER=${LATEST_TAG#v}
          IFS='.' read -ra ADDR <<< "$VERSION_NUMBER"
          NEW_VERSION="v$(echo "${ADDR[0]}.$((${ADDR[1]} + 1))")"
          echo "version=$NEW_VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: honeykwak/grayround:${{ env.version }}

      - name: Update grayround.yaml
        run: |
          NEW_TAG="${{ env.version }}"
          sed -i "s|image: honeykwak/grayround:.*|image: honeykwak/grayround:$NEW_TAG|g" grayround.yaml

      - name: Check if grayround.yaml was changed
        id: check_file
        run: |
          if git diff --exit-code; then
            echo "changed=false" >> $GITHUB_ENV
          else
            echo "changed=true" >> $GITHUB_ENV
          fi  # 추가된 부분

      - name: Commit and push changes
        if: env.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'Your Name'
          git config --global user.email 'your.email@example.com'
          git add grayround.yaml
          git commit -m "Update grayround.yaml with new image tag ${{ env.version }}"
          git push origin master

