name: grayround project

on:
  push:
    branches:
      - 'master'
    tags:
      - '**'

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the latest tag
        id: latest_tag
        run: echo ::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Calculate new tag
        id: new_tag
        run: |
          LATEST_TAG=${{ steps.latest_tag.outputs.tag }}
          IFS='.' read -ra ADDR <<< "$LATEST_TAG"
          NEW_VERSION=$(echo "${ADDR[0]}.$((${ADDR[1]} + 1))")
          echo ::set-output name=version::$NEW_VERSION
        shell: bash

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: honeykwak/grayround:${{ steps.new_tag.outputs.version }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      # grayround.yaml 파일 업데이트
      - name: Update grayround.yaml
        run: |
          NEW_TAG="${{ steps.new_tag.outputs.version }}"
          sed -i "s|image: honeykwak/grayround:.*|image: honeykwak/grayround:$NEW_TAG|g" grayround.yaml

      # grayround.yaml 파일 변경 여부 확인
      - name: Check if grayround.yaml was changed
        id: check_file
        run: |
          if git diff --exit-code; then
            echo "No changes in grayround.yaml"
            echo ::set-output name=changed::false
          else
            echo "grayround.yaml was changed"
            echo ::set-output name=changed::true
          fi

      # 변경 사항 커밋 및 푸시
      - name: Commit and push changes
        if: steps.check_file.outputs.changed == 'true'
        run: |
          git config --global user.name 'testing'
          git config --global user.email 'test@gmail.com'
          git add grayround.yaml
          git commit -m "Update grayround.yaml with new image tag ${{ steps.new_tag.outputs.version }}"
          git push origin master

